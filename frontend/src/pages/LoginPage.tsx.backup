import { useState } from 'react'
import { Link, useNavigate } from 'react-router-dom'
import { useAuth } from '../contexts/AuthContext'

const LoginPage = () => {
  const [formData, setFormData] = useState({
    email: '',
    password: ''
  })
  const [isLoading, setIsLoading] = useState(false)
  
  const { login, error, clearError } = useAuth()
  const navigate = useNavigate()

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    // Clear error when user starts typing
    if (error) {
      clearError()
    }
    
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    })
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsLoading(true)

    try {
      await login(formData.email, formData.password)
      navigate('/dashboard')
    } catch (error) {
      // Error is handled by AuthContext
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 relative overflow-hidden">
      {/* Decorative Elements */}
      <div className="absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none">
        <div className="absolute -top-16 -left-16 w-72 h-72 bg-purple-300/40 rounded-full mix-blend-multiply opacity-30 animate-blob"></div>
        <div className="absolute top-1/2 -right-16 w-72 h-72 bg-blue-300/40 rounded-full mix-blend-multiply opacity-30 animate-blob animation-delay-2000"></div>
        <div className="absolute -bottom-24 left-1/3 w-72 h-72 bg-indigo-300/40 rounded-full mix-blend-multiply opacity-30 animate-blob animation-delay-4000"></div>
        <div className="absolute inset-0 bg-gradient-to-t from-white/80 to-transparent"></div>
      </div>

      {/* Header */}
      <header className="bg-white/90 backdrop-blur-lg border-b border-gray-100 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-14">
            <Link to="/" className="flex-shrink-0 group flex items-center -space-x-1">
              <img 
                src="/level up.png" 
                alt="LevelUp Logo" 
                className="h-16 sm:h-[70px] lg:h-[100px] w-auto object-contain"
                style={{ filter: 'drop-shadow(0 0 8px rgba(0, 0, 0, 0.1))' }}
              />
              <h1 className="text-xl font-display font-semibold group-hover:from-blue-700 group-hover:to-purple-700 transition-all duration-300">
                <span className="text-black">Level</span><span className="text-orange-500">Up</span>
              </h1>
            </Link>
          </div>
        </div>
      </header>

      {/* Login Form */}
      <div className="flex items-center justify-center min-h-[calc(100vh-3.5rem)] px-4 sm:px-6 relative z-10">
        <div className="w-full max-w-md">
          <div className="relative">
            {/* Glowing effect */}
            <div className="absolute -inset-0.5 bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 rounded-2xl blur opacity-25 group-hover:opacity-35 transition duration-1000 group-hover:duration-200 animate-gradient"></div>
            <div className="relative bg-white/95 backdrop-blur-xl p-6 sm:p-8 rounded-2xl shadow-xl border border-white/50">
              <div className="text-center mb-8">
                <h2 className="text-2xl sm:text-3xl font-display font-bold bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 bg-clip-text text-transparent mb-3">
                  Welcome Back
                </h2>
                <p className="text-gray-600 text-sm sm:text-base font-light tracking-wide">
                  Continue your learning journey
                </p>
              </div>

              <form onSubmit={handleSubmit} className="space-y-6">
                {error && (
                  <div className="p-4 rounded-xl bg-red-50/80 backdrop-blur-sm border-2 border-red-100 shadow-lg">
                    <div className="flex items-center">
                      <svg className="w-6 h-6 text-red-400 mr-3 animate-pulse" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      <div className="text-base text-red-600 font-medium leading-relaxed">{error}</div>
                    </div>
                  </div>
                )}

                <div className="space-y-5">
                  <div className="relative">
                    <input
                      id="email"
                      name="email"
                      type="email"
                      autoComplete="email"
                      required
                      className="peer w-full px-4 py-3 rounded-xl border-2 border-gray-200 placeholder-transparent focus:border-blue-500 focus:ring-4 focus:ring-blue-100 focus:outline-none transition-all duration-300 bg-white/50 backdrop-blur-sm text-gray-800"
                      placeholder="Email address"
                      value={formData.email}
                      onChange={handleChange}
                    />
                    <label
                      htmlFor="email"
                      className="absolute left-3 -top-2.5 bg-white px-2 text-sm font-medium text-gray-600 transition-all peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-placeholder-shown:top-3 peer-placeholder-shown:left-4 peer-focus:-top-2.5 peer-focus:left-3 peer-focus:text-sm peer-focus:text-blue-600"
                    >
                      Email address
                    </label>
                  </div>

                  <div className="relative">
                    <input
                      id="password"
                      name="password"
                      type="password"
                      autoComplete="current-password"
                      required
                      className="peer w-full px-4 py-3 rounded-xl border-2 border-gray-200 placeholder-transparent focus:border-blue-500 focus:ring-4 focus:ring-blue-100 focus:outline-none transition-all duration-300 bg-white/50 backdrop-blur-sm text-gray-800"
                      placeholder="Password"
                      value={formData.password}
                      onChange={handleChange}
                    />
                    <label
                      htmlFor="password"
                      className="absolute left-3 -top-2.5 bg-white px-2 text-sm font-medium text-gray-600 transition-all peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-placeholder-shown:top-3 peer-placeholder-shown:left-4 peer-focus:-top-2.5 peer-focus:left-3 peer-focus:text-sm peer-focus:text-blue-600"
                    >
                      Password
                    </label>
                  </div>
                </div>

                <div className="pt-6">
                  <button
                    type="submit"
                    disabled={isLoading}
                    className="group relative w-full py-3 px-6 text-base font-medium text-white bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 rounded-xl overflow-hidden transition-all duration-300 hover:shadow-[0_0_30px_rgba(79,70,229,0.4)] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none"
                  >
                    {isLoading ? (
                      <div className="flex items-center justify-center">
                        <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                          <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                          <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        Signing in...
                      </div>
                    ) : (
                      'Sign In'
                    )}
                  </button>
                </div>

                <div className="relative py-6">
                  <div className="absolute inset-0 flex items-center">
                    <div className="w-full border-t border-gray-200"></div>
                  </div>
                  <div className="relative flex justify-center">
                    <span className="bg-white px-4 text-sm text-gray-500">or</span>
                  </div>
                </div>

                <div className="space-y-4">
                  <p className="text-center text-sm text-gray-600">
                    Don't have an account?{' '}
                    <Link
                      to="/register"
                      className="font-semibold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent hover:from-blue-700 hover:to-purple-700 transition-all duration-200"
                    >
                      Create one
                    </Link>
                  </p>
                  
                  <Link
                    to="/"
                    className="flex items-center justify-center text-sm text-gray-600 hover:text-gray-900 transition-colors duration-200"
                  >
                    <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                    </svg>
                    Back to home
                  </Link>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default LoginPage